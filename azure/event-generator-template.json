{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "parameters": {
    "serviceIdentifier": {
      "type": "string",
      "minLength": 4,
      "maxLength": 4
    },
    "environment": {
      "type": "string",
      "defaultValue": "d",
      "allowedValues": [
        "d",
        "t",
        "p"
      ]
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "DEV",
      "allowedValues": [
        "DEV",
        "TEST",
        "OAT",
        "PROD"
      ]
    },
    "environmentInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "sharedResourcesAppName": {
      "type": "string",
      "defaultValue": "common"
    },
    "eapimPublicIpAddress": {
      "type": "string"
    },
    "keyVaultInstance": {
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "defaultValue": "01"
    },
    "keyVaultSecretNameCdcEventsSubscriptionKey": {
      "type": "string",
      "defaultValue": "cdc-events-subscription-key"
    },
    "keyVaultSecretNameKycloudApiPassword": {
      "type": "string",
      "defaultValue": "kycloud-api-password"
    },
    "keyVaultSecretNameKycloudApiToken": {
      "type": "string",
      "defaultValue": "kycloud-api-token"
    },
    "keyVaultSecretNameCdcEventsTokenRequestPayload": {
      "type": "string",
      "defaultValue": "cdc-events-token-request-payload"
    },
    "cdcEventsApiBaseUri": {
      "type": "string"
    },
    "kycloudApiBaseUri": {
      "type": "string"
    },
    "kycloudApiEmail": {
      "type": "string"
    },
    "loginEndpoint": {
      "type": "string",
      "defaultValue": "user/login"
    },
    "dataPathPrefix": {
      "type": "string",
      "defaultValue": "data"
    },
    "internalOAuthTokenEndpoint": {
      "type": "string"
    },
    "appName": {
      "type": "string",
      "defaultValue": "cdcaeg"
    },
    "appInstance": {
      "type": "string",
      "defaultValue": "01"
    }
  },
  "variables": {
    "singleQuote": "'",
    "namePrefix": "[concat(parameters('serviceIdentifier'), parameters('environment'), parameters('environmentInstance'))]",
    "sharedResourceGroupName": "[concat(variables('namePrefix'), '-', parameters('sharedResourcesAppName'))]",
    "keyVaultName": "[concat(variables('namePrefix'), '-kv-', parameters('keyVaultInstance'))]",
    "logicAppName": "[concat(variables('namePrefix'), '-', parameters('appName'), '-la-', parameters('appInstance'))]",
    "logicAppId": "[resourceId('Microsoft.Logic/workflows/', variables('logicAppName'))]",
    "keyVaultSecretCdcEventsSubscriptionKey": "[resourceId(variables('sharedResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), parameters('keyVaultSecretNameCdcEventsSubscriptionKey'))]",
    "keyVaultSecretKycloudApiPassword": "[resourceId(variables('sharedResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), parameters('keyVaultSecretNameKycloudApiPassword'))]",
    "keyVaultSecretKycloudApiToken": "[resourceId(variables('sharedResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), parameters('keyVaultSecretNameKycloudApiToken'))]",
    "keyVaultSecretCdcEventsTokenRequestPayload": "[resourceId(variables('sharedResourceGroupName'), 'Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), parameters('keyVaultSecretNameCdcEventsTokenRequestPayload'))]",
    "loginUri": "[concat(parameters('kycloudApiBaseUri'), '/', parameters('loginEndpoint'))]",
    "dataPathUri": "[concat(parameters('kycloudApiBaseUri'), '/', parameters('dataPathPrefix'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-07-01",
      "type": "Microsoft.Logic/workflows",
      "name": "[variables('logicAppName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "environment": "[parameters('environmentName')]",
        "app": "[parameters('appName')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Check_Attachments_Finished_OK": {
              "actions": {
                "Set_runStatus_to_Succeeded": {
                  "inputs": {
                    "name": "runStatus",
                    "value": 32
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('continueAttachments')",
                      true
                    ]
                  }
                ]
              },
              "runAfter": {
                "For_each_attachment": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "Finish_load": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')",
                  "X-Run-Status": "@{variables('runStatus')}"
                },
                "method": "PUT",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Check_Attachments_Finished_OK": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "For_each_ApiEntitiesToPull": {
              "actions": {
                "Loop_through_pages": {
                  "actions": {
                    "Check_results_for_entities": {
                      "actions": {
                        "Push_to_CDC_events_API_endpoint": {
                          "inputs": {
                            "body": "@body('Parse_entity_page')?['Infos']",
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                              "Content-Type": "application/octet-stream",
                              "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                              "X-Page": "@{variables('currentPage')}",
                              "X-Run-Identifier": "@variables('nowDateTime')"
                            },
                            "method": "POST",
                            "retryPolicy": {
                              "type": "none"
                            },
                            "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/@{items(', variables('singleQuote'), 'For_each_ApiEntitiesToPull', variables('singleQuote'), ')}')]"
                          },
                          "runAfter": {},
                          "type": "Http"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_continuePaging_=_false": {
                            "inputs": {
                              "name": "continuePaging",
                              "value": false
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(body('Parse_entity_page')['Infos'])",
                              0
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Increment_variable": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Increment_variable": {
                      "inputs": {
                        "name": "currentPage",
                        "value": 1
                      },
                      "runAfter": {
                        "Parse_entity_page": [
                          "Succeeded"
                        ]
                      },
                      "type": "IncrementVariable"
                    },
                    "Parse_entity_page": {
                      "inputs": {
                        "content": "@body('Pull_entity_page')",
                        "schema": {
                          "properties": {
                            "Infos": {
                              "items": {
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "Success": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {
                        "Pull_entity_page": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson"
                    },
                    "Pull_entity_page": {
                      "inputs": {
                        "headers": {
                          "Accept": "application/json"
                        },
                        "method": "GET",
                        "queries": {
                          "Page": "@{variables('currentPage')}",
                          "PageSize": "1000",
                          "SessionId": "@body('Parse_sessionId')?['SessionId']",
                          "UpdatedSince": "@variables('sinceDateTime')",
                          "format": "json",
                          "jsconfig": "dh:iso8601"
                        },
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[concat(variables('dataPathUri'), '/@{items(', variables('singleQuote'), 'For_each_ApiEntitiesToPull', variables('singleQuote'), ')}')]"
                      },
                      "runAfter": {},
                      "type": "Http"
                    }
                  },
                  "expression": "@equals(variables('continuePaging'), false)",
                  "limit": {
                    "count": 5000,
                    "timeout": "PT1H"
                  },
                  "runAfter": {
                    "Set_currentPage_=_1": [
                      "Succeeded"
                    ]
                  },
                  "type": "Until"
                },
                "Set_continuePaging_=_true": {
                  "inputs": {
                    "name": "continuePaging",
                    "value": true
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                },
                "Set_currentPage_=_1": {
                  "inputs": {
                    "name": "currentPage",
                    "value": 1
                  },
                  "runAfter": {
                    "Set_continuePaging_=_true": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable"
                }
              },
              "foreach": "@parameters('ApiEntitiesToPull')",
              "runAfter": {
                "Initialise_currentPage": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              },
              "type": "Foreach"
            },
            "For_each_attachment": {
              "actions": {
                "Check_BLOB_created": {
                  "actions": {},
                  "else": {
                    "actions": {
                      "Set_continueAttachments_as_FALSE_to_CDC": {
                        "inputs": {
                          "name": "continueAttachments",
                          "value": false
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('Create_blob')['statusCode']",
                          202
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "Create_blob": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "Create_blob": {
                  "inputs": {
                    "body": [
                      {
                        "BlobData": "@body('Get_blob')",
                        "BlobKey": "@items('For_each_attachment')['BlobKey']",
                        "MimeType": "@items('For_each_attachment')['MimeType']",
                        "ParentObjectId": "@items('For_each_attachment')['ParentObjectId']",
                        "ParentObjectType": "@items('For_each_attachment')['ParentObjectType']"
                      }
                    ],
                    "headers": {
                      "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                      "Content-Type": "application/octet-stream",
                      "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                      "X-Run-Identifier": "@variables('nowDateTime')"
                    },
                    "method": "POST",
                    "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/@{items(', variables('singleQuote'), 'blobs', variables('singleQuote'), ')}')]"
                  },
                  "runAfter": {
                    "While_Continue_Attachments": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  },
                  "type": "Http"
                },
                "While_Continue_Attachments": {
                  "actions": {
                    "Get_blob": {
                      "inputs": {
                        "headers": {
                          "Accept": "*/*"
                        },
                        "method": "GET",
                        "queries": {
                          "AsAtachment": "true",
                          "BlobKey": "@items('For_each_attachment')['BlobKey']",
                          "SessionId": "@variables('AttachmentsSessionId')"
                        },
                        "uri": "[concat(variables('dataPathUri'), '/@{items(', variables('singleQuote'), 'blobs', variables('singleQuote'), ')}')]"
                      },
                      "runAfter": {},
                      "type": "Http"
                    },
                    "If_BLOB_was_recieved": {
                      "actions": {},
                      "else": {
                        "actions": {
                          "Check_unauathorised": {
                            "actions": {
                              "Parse_relogin_after_401": {
                                "inputs": {
                                  "content": "@body('Re_login_after_401')",
                                  "schema": {
                                    "properties": {
                                      "SessionId": {
                                        "type": "string"
                                      },
                                      "Success": {
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "runAfter": {
                                  "Re_login_after_401": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ParseJson"
                              },
                              "Re_login_after_401": {
                                "inputs": {
                                  "headers": {
                                    "Accept": "application/json"
                                  },
                                  "method": "POST",
                                  "queries": {
                                    "ApiToken": "@body('Parse_kycloud-api-token')?['value']",
                                    "Email": "@parameters('KycloudApiEmail')",
                                    "Password": "@body('Parse_kycloud-api-password')?['value']"
                                  },
                                  "uri": "[variables('loginUri')]"
                                },
                                "runAfter": {},
                                "type": "Http"
                              },
                              "Set_AttachementsSessionId_after_relogin_after_401": {
                                "inputs": {
                                  "name": "AttachmentsSessionId",
                                  "value": "@body('Parse_relogin_after_401')?['SessionId']"
                                },
                                "runAfter": {
                                  "Parse_relogin_after_401": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable"
                              }
                            },
                            "else": {
                              "actions": {
                                "Set_continueAttachments_false_from_kykloud": {
                                  "inputs": {
                                    "name": "continueAttachments",
                                    "value": false
                                  },
                                  "runAfter": {},
                                  "type": "SetVariable"
                                }
                              }
                            },
                            "expression": {
                              "and": [
                                {
                                  "equals": [
                                    "@outputs('Get_blob')['statusCode']",
                                    401
                                  ]
                                }
                              ]
                            },
                            "runAfter": {},
                            "type": "If"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('Get_blob')['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Get_blob": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@variables('continueAttachments')",
                          true
                        ]
                      }
                    ]
                  },
                  "runAfter": {},
                  "type": "If"
                }
              },
              "foreach": "@body('Parse_Attachments_JSON')",
              "runAfter": {
                "Get_a_fresh_sessionId": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_Attachments": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')"
                },
                "method": "GET",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/@{items(', variables('singleQuote'), 'attachments', variables('singleQuote'), ')}')]"
              },
              "runAfter": {
                "Update_load_status_to_Attachments": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Get_a_fresh_sessionId": {
              "actions": {
                "Condition": {
                  "actions": {
                    "Check_relogin": {
                      "actions": {
                        "Set_AttachmentsSessionId": {
                          "inputs": {
                            "name": "AttachmentsSessionId",
                            "value": "@body('Parse_relogin')?['SessionId']"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Relogin_Failed": {
                            "inputs": {
                              "runError": {
                                "message": "Failed to re login"
                              },
                              "runStatus": "Failed"
                            },
                            "runAfter": {},
                            "type": "Terminate"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@body('Parse_relogin')?['Success']",
                              true
                            ]
                          }
                        ]
                      },
                      "runAfter": {
                        "Parse_relogin": [
                          "Succeeded"
                        ]
                      },
                      "type": "If"
                    },
                    "Parse_relogin": {
                      "inputs": {
                        "content": "@body('Relogin')",
                        "schema": {
                          "properties": {
                            "SessionId": {
                              "type": "string"
                            },
                            "Success": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {},
                      "type": "ParseJson"
                    }
                  },
                  "else": {
                    "actions": {
                      "Terminate": {
                        "inputs": {
                          "runError": {
                            "message": "Failed KyKloud login"
                          },
                          "runStatus": "Failed"
                        },
                        "runAfter": {},
                        "type": "Terminate"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('Relogin')['statusCode']",
                          200
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "Relogin": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "Relogin": {
                  "inputs": {
                    "headers": {
                      "Accept": "application/json"
                    },
                    "method": "POST",
                    "queries": {
                      "ApiToken": "@body('Parse_kycloud-api-token')?['value']",
                      "Email": "@parameters('KycloudApiEmail')",
                      "Password": "@body('Parse_kycloud-api-password')?['value']"
                    },
                    "uri": "[variables('loginUri')]"
                  },
                  "runAfter": {},
                  "type": "Http"
                }
              },
              "runAfter": {
                "Initialize_AttachmentSessionId": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Get_and_Parse_Secrets_from_KeyVault": {
              "actions": {
                "Get_kycloud-api-token_from_KeyVault": {
                  "type": "Http",
                  "inputs": {
                    "authentication": {
                      "audience": "https://vault.azure.net",
                      "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "[concat(reference(variables('keyVaultSecretKycloudApiToken'), '2019-09-01').secretUriWithVersion, '?api-version=2016-10-01')]"
                  }
                },
                "Parse_kycloud-api-token": {
                  "runAfter": {
                    "Get_kycloud-api-token_from_KeyVault": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_kycloud-api-token_from_KeyVault')",
                    "schema": {
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Get_kycloud-api-password_from_KeyVault": {
                  "runAfter": {
                    "Parse_kycloud-api-token": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "authentication": {
                      "audience": "https://vault.azure.net",
                      "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "[concat(reference(variables('keyVaultSecretKycloudApiPassword'), '2019-09-01').secretUriWithVersion, '?api-version=2016-10-01')]"
                  }
                },
                "Parse_kycloud-api-password": {
                  "runAfter": {
                    "Get_kycloud-api-password_from_KeyVault": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_kycloud-api-password_from_KeyVault')",
                    "schema": {
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Get_cdc-events-subscription-key": {
                  "runAfter": {
                    "Parse_kycloud-api-password": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "authentication": {
                      "audience": "https://vault.azure.net",
                      "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "[concat(reference(variables('keyVaultSecretCdcEventsSubscriptionKey'), '2019-09-01').secretUriWithVersion, '?api-version=2016-10-01')]"
                  }
                },
                "Parse_cdc-events-subscription-key": {
                  "runAfter": {
                    "Get_cdc-events-subscription-key": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Get_cdc-events-subscription-key')",
                    "schema": {
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Get_cdc-events-token-request-payload": {
                  "runAfter": {
                    "Parse_cdc-events-subscription-key": [
                      "Succeeded"
                    ]
                  },
                  "type": "Http",
                  "inputs": {
                    "authentication": {
                      "audience": "https://vault.azure.net",
                      "type": "ManagedServiceIdentity"
                    },
                    "method": "GET",
                    "uri": "[concat(reference(variables('keyVaultSecretCdcEventsTokenRequestPayload'), '2019-09-01').secretUriWithVersion, '?api-version=2016-10-01')]"
                  }
                },
                "Parse_cdc-events-token-request-payload": {
                  "inputs": {
                    "content": "@body('Get_cdc-events-token-request-payload')",
                    "schema": {
                      "properties": {
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "Get_cdc-events-token-request-payload": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson"
                }
              },
              "type": "Scope"
            },
            "Get_sessionId": {
              "actions": {
                "Check_if_logging_in_was_a_success": {
                  "actions": {
                    "Login_was_a_success_-_continuing_with_execution": {
                      "actions": {},
                      "runAfter": {},
                      "type": "Scope"
                    }
                  },
                  "else": {
                    "actions": {
                      "Terminate_-_couldn't_log_in,_for_whatever_reason": {
                        "inputs": {
                          "runStatus": "Failed"
                        },
                        "runAfter": {},
                        "type": "Terminate"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Parse_sessionId')?['Success']",
                          true
                        ]
                      }
                    ]
                  },
                  "runAfter": {
                    "Parse_sessionId": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "Get_sessionId_from_login_endpoint": {
                  "inputs": {
                    "headers": {
                      "Accept": "application/json"
                    },
                    "method": "POST",
                    "queries": {
                      "ApiToken": "@body('Parse_kycloud-api-token')?['value']",
                      "Email": "@parameters('KycloudApiEmail')",
                      "Password": "@body('Parse_kycloud-api-password')?['value']"
                    },
                    "uri": "[variables('loginUri')]"
                  },
                  "runAfter": {},
                  "type": "Http"
                },
                "Parse_sessionId": {
                  "inputs": {
                    "content": "@body('Get_sessionId_from_login_endpoint')",
                    "schema": {
                      "properties": {
                        "SessionId": {
                          "type": "string"
                        },
                        "Success": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "Get_sessionId_from_login_endpoint": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson"
                }
              },
              "runAfter": {
                "Update_load_status_to_Login": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Initialise_continuePaging": {
              "inputs": {
                "variables": [
                  {
                    "name": "continuePaging",
                    "type": "boolean"
                  }
                ]
              },
              "runAfter": {
                "Initialise_parentId": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialise_currentPage": {
              "inputs": {
                "variables": [
                  {
                    "name": "currentPage",
                    "type": "integer"
                  }
                ]
              },
              "runAfter": {
                "Initialise_continuePaging": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialise_nowDateTime": {
              "inputs": {
                "variables": [
                  {
                    "name": "nowDateTime",
                    "type": "string",
                    "value": "@{utcNow()}"
                  }
                ]
              },
              "runAfter": {
                "Obtain_CDC_Events_OAuth_Token": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialise_parentId": {
              "inputs": {
                "variables": [
                  {
                    "name": "parentId",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Update_load_Status_to_Entities": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_AttachmentSessionId": {
              "inputs": {
                "variables": [
                  {
                    "name": "AttachmentsSessionId",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_reloginCount": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_attachments_OK": {
              "inputs": {
                "variables": [
                  {
                    "name": "continueAttachments",
                    "type": "boolean",
                    "value": true
                  }
                ]
              },
              "runAfter": {
                "Parse_Attachments_JSON": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_runStatus_to_Initialising": {
              "inputs": {
                "variables": [
                  {
                    "name": "runStatus",
                    "type": "integer",
                    "value": 1
                  }
                ]
              },
              "runAfter": {
                "Start_load_as_Initialising": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_sinceDateTime": {
              "inputs": {
                "variables": [
                  {
                    "name": "sinceDateTime",
                    "type": "string",
                    "value": "@{outputs('Start_load_as_Initialising')['headers']?['X-Run-Since']}"
                  }
                ]
              },
              "runAfter": {
                "Reset_nowDateTime": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_reloginCount": {
              "inputs": {
                "variables": [
                  {
                    "name": "reloginCount",
                    "type": "integer",
                    "value": 0
                  }
                ]
              },
              "runAfter": {
                "Initialize_attachments_OK": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Obtain_CDC_Events_OAuth_Token": {
              "actions": {
                "Get_CDC_Events_OAuth_Token": {
                  "inputs": {
                    "body": "@body('Parse_cdc-events-token-request-payload')?['value']",
                    "headers": {
                      "Content-Type": "application/x-www-form-urlencoded"
                    },
                    "method": "POST",
                    "uri": "[parameters('internalOAuthTokenEndpoint')]"
                  },
                  "runAfter": {},
                  "type": "Http"
                },
                "Parse_CDC_Events_OAuth_Token": {
                  "inputs": {
                    "content": "@body('Get_CDC_Events_OAuth_Token')",
                    "schema": {
                      "properties": {
                        "access_token": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "Get_CDC_Events_OAuth_Token": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson"
                }
              },
              "runAfter": {
                "Get_and_Parse_Secrets_from_KeyVault": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Parse_Attachments_JSON": {
              "inputs": {
                "content": "@body('Get_Attachments')",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "BlobKey": {
                        "type": "string"
                      },
                      "MimeType": {
                        "type": "string"
                      },
                      "ParentObjectType": {
                        "type": "string"
                      },
                      "ParentObjectId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "BlobKey",
                      "MimeType",
                      "ParentObjectType",
                      "ParentObjectId"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_Attachments": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "Reset_nowDateTime": {
              "inputs": {
                "name": "nowDateTime",
                "value": "@{outputs('Start_load_as_Initialising')?['headers']?['X-Run-Identifier']}"
              },
              "runAfter": {
                "Initialize_runStatus_to_Initialising": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_runStatus_Login": {
              "inputs": {
                "name": "runStatus",
                "value": 4
              },
              "runAfter": {
                "Update_load_status_to_Preparing": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_runStatus_to_Attachments": {
              "inputs": {
                "name": "runStatus",
                "value": 16
              },
              "runAfter": {
                "For_each_ApiEntitiesToPull": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_runStatus_to_Entities": {
              "inputs": {
                "name": "runStatus",
                "value": 8
              },
              "runAfter": {
                "Get_sessionId": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Set_runStatus_to_Preparing": {
              "inputs": {
                "name": "runStatus",
                "value": 2
              },
              "runAfter": {
                "Initialize_sinceDateTime": [
                  "Succeeded"
                ]
              },
              "type": "SetVariable"
            },
            "Start_load_as_Initialising": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')"
                },
                "method": "POST",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Initialise_nowDateTime": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Update_load_Status_to_Entities": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')",
                  "X-Run-Status": "@{variables('runStatus')}"
                },
                "method": "PATCH",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Set_runStatus_to_Entities": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Update_load_status_to_Attachments": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')",
                  "X-Run-Status": "@{variables('runStatus')}"
                },
                "method": "PATCH",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Set_runStatus_to_Attachments": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Update_load_status_to_Login": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')",
                  "X-Run-Status": "@{variables('runStatus')}"
                },
                "method": "PATCH",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Set_runStatus_Login": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Update_load_status_to_Preparing": {
              "inputs": {
                "headers": {
                  "Authorization": "Bearer @{body('Parse_CDC_Events_OAuth_Token')?['access_token']}",
                  "Content-Type": "application/json",
                  "Ocp-Apim-Subscription-Key": "@body('Parse_cdc-events-subscription-key')?['value']",
                  "X-Run-Identifier": "@variables('nowDateTime')",
                  "X-Run-Status": "@{variables('runStatus')}"
                },
                "method": "PATCH",
                "uri": "[concat(parameters('cdcEventsApiBaseUri'), '/load')]"
              },
              "runAfter": {
                "Set_runStatus_to_Preparing": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            }
          },
          "contentVersion": "1.0.0.0",
          "parameters": {
            "ApiEntitiesToPull": {
              "defaultValue": [
                "sites",
                "surveysectionelements",
                "portfolios",
                "users",
                "deleted",
                "surveylots",
                "activities",
                "actuals",
                "oncosts",
                "plans",
                "spends",
                "surveysections",
                "surveys"
              ],
              "type": "Array"
            },
            "KycloudApiEmail": {
              "defaultValue": "eapim.support@education.gov.uk",
              "type": "String"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "schedule": {
                  "hours": [
                    "16"
                  ]
                }
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {
    "logicAppPrincipalId": {
      "value": "[reference(variables('logicAppId'), '2019-05-01', 'Full').identity.principalId]",
      "type": "string"
    }
  },
  "contentVersion": "1.0.0.0"
}